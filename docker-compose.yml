version: "3"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: kafka-nodejs-example-zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka:2.11-1.1.0
    container_name: kafka-nodejs-example-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: sales-topic:1:1,user-created:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  database:
    image: postgres:12.4
    container_name: kafka-nodejs-example-database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: microservices
    ports:
      - 5666:5432
    volumes:
      - db:/var/lib/postgresql/microservices/
  auth-service:
    build: ./apps/auth-service
    container_name: kafka-nodejs-example-auth-services
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 -timeout 15s npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      DATABASE_URL: postgresql://admin:password@database:5432/microservices
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - ${AUTH_SERVICE_PORT}:3000
  users-service:
    build: ./apps/users-service
    container_name: kafka-nodejs-example-users-services
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 -timeout 15s npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      PGHOST: database
      PGPORT: 5432
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - ${USER_SERVICE_PORT}:3000
  email-service:
    build: ./apps/email-service
    container_name: kafka-nodejs-example-email-service
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

volumes:
  db:
